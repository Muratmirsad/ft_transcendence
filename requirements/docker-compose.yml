services:
  backend:
    build:
      context: ../docker/backend
      dockerfile: Dockerfile
    container_name: backend
    restart: always
    ports:
      - "8000:8000"
    volumes:
      - ../docker/backend/src:/app
    depends_on:
      - database
      - redis
    env_file:
      - ../requirements/.env

  database:
    build:
      context: ../docker/database
      dockerfile: Dockerfile
    container_name: database
    restart: always
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    env_file:
      - ../requirements/.env  # Postgres yapılandırmaları için .env dosyasını kullanır
    # healthcheck:  # Database'in hazır olup olmadığını kontrol eder
    #   test: ["CMD-SHELL", "pg_isready -U $POSTGRES_USER"]
    #   interval: 10s
    #   timeout: 5s
    #   retries: 5

  nginx:
    build:
      context: ../docker/nginx
      dockerfile: Dockerfile
    container_name: nginx
    restart: always
    ports:
      - "80:80"
      - "443:443"  # HTTPS için port açıldı
    volumes:
      - ../docker/nginx/nginx.conf:/etc/nginx/conf.d/default.conf
      - ../docker/frontend:/var/www/html
      - static_volume:/app/static
    depends_on:
      - backend

  redis:
    image: redis:7
    container_name: redis
    restart: always
    ports:
      - "6379:6379"

volumes:
  postgres_data:
  static_volume:
