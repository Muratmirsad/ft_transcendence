version: "3.8"

services:
  db:
    image: postgres:alpine
    container_name: db
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    volumes:
      - ../app/postgres_data:/var/lib/postgresql/data
    networks:
      - default

  auth:
    build: ../app/auth
    container_name: auth_service
    ports:
      - "8001:8000" # Host:Container Port
    environment:
      - DATABASE_URL=${DATABASE_URL}
    env_file:
      - .env
    volumes:
      - ../app/auth:/code/auth
      - ../app/qrdata:/qrdata
    depends_on:
      - db
    networks:
      - default

  front:
    build: ../app/front
    container_name: frontend_service
    ports:
      - "3000:80"
    volumes:
      - ../app/front:/usr/share/nginx/html
      - ../app/qrdata:/usr/share/nginx/html/qrdata
    depends_on:
      - auth
    networks:
      - default

  nginx:
    build: ../app/nginx
    container_name: nginx_server
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ../app/nginx/ssl/certificate.key:/etc/ssl/private/certificate.key
      - ../app/nginx/ssl/certificate.pem:/etc/ssl/certs/certificate.pem
      - ../app/nginx/nginx.conf:/etc/nginx/nginx.conf
    depends_on:
      - front
    networks:
      - default

  redis:
    image: redis:alpine
    container_name: redis_server
    ports:
      - "6379:6379"
    networks:
      - default

  game:
    build: ../app/pingpong
    container_name: game_service
    ports:
      - "8003:8000"
    environment:
      - DATABASE_URL=${DATABASE_URL}
    env_file:
      - .env
    volumes:
      - ../app/pingpong:/code/pingpong
    depends_on:
      - db
    networks:
      - default

volumes:
  postgres_data:
  qrdata:

networks:
  default:
    driver: bridge
